#  geom_line() +
#  labs(title = "Crude Oil Prices Over Time", x = "Date", y = "Value")
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
# Load the Crude Oil Price dataset
crude_oil_prices <- read.csv("MER_T09_01_CRUDE_OIL_PRICE.csv")
# Convert YYYYMM to Date format
crude_oil_prices$Date <- as.Date(paste0(crude_oil_prices$YYYYMM, "01"), format="%Y%m%d")
crude_oil_prices <- crude_oil_prices[substr(crude_oil_prices$YYYYMM, 5, 6) <= 12, ]
head(crude_oil_prices$Date)
# Plot for Crude Oil Prices
#ggplot(crude_oil_prices, aes(x = Date, y = Value)) +
#  geom_line() +
#  labs(title = "Crude Oil Prices Over Time", x = "Date", y = "Value")
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
# Load the Crude Oil Price dataset
crude_oil_prices <- read.csv("MER_T09_01_CRUDE_OIL_PRICE.csv")
# Convert YYYYMM to Date format
crude_oil_prices <- crude_oil_prices[substr(crude_oil_prices$YYYYMM, 5, 6) <= 12, ]
# After filtering, attempt to convert 'YYYYMM' to Date format again
crude_oil_prices$Date <- as.Date(paste0(substr(crude_oil_prices$YYYYMM, 1, 4),
substr(crude_oil_prices$YYYYMM, 5, 6),
"01"), format="%Y%m%d")
head(crude_oil_prices$Date)
# Plot for Crude Oil Prices
#ggplot(crude_oil_prices, aes(x = Date, y = Value)) +
#  geom_line() +
#  labs(title = "Crude Oil Prices Over Time", x = "Date", y = "Value")
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
# Load the Crude Oil Price dataset
crude_oil_prices <- read.csv("MER_T09_01_CRUDE_OIL_PRICE.csv")
# Convert YYYYMM to Date format
crude_oil_prices <- crude_oil_prices[substr(crude_oil_prices$YYYYMM, 5, 6) <= 12, ]
# After filtering, attempt to convert 'YYYYMM' to Date format again
crude_oil_prices$Date <- as.Date(paste0(substr(crude_oil_prices$YYYYMM, 1, 4),
substr(crude_oil_prices$YYYYMM, 5, 6),
"01"), format="%Y%m%d")
head(crude_oil_prices$Date)
sum(is.na(crude_oil_prices$Value))
# Plot for Crude Oil Prices
#ggplot(crude_oil_prices, aes(x = Date, y = Value)) +
#  geom_line() +
#  labs(title = "Crude Oil Prices Over Time", x = "Date", y = "Value")
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
# Load the Crude Oil Price dataset
crude_oil_prices <- read.csv("MER_T09_01_CRUDE_OIL_PRICE.csv")
# Convert YYYYMM to Date format
crude_oil_prices <- crude_oil_prices[substr(crude_oil_prices$YYYYMM, 5, 6) <= 12, ]
# After filtering, attempt to convert 'YYYYMM' to Date format again
crude_oil_prices$Date <- as.Date(paste0(substr(crude_oil_prices$YYYYMM, 1, 4),
substr(crude_oil_prices$YYYYMM, 5, 6),
"01"), format="%Y%m%d")
head(crude_oil_prices$Date)
sum(is.na(crude_oil_prices$Value))
# Plotting with ggplot2
p_crude_oil <- ggplot(crude_oil_prices, aes(x = Date, y = Value)) +
geom_line() + # Add a line geometry
theme_minimal() + # Optional: Use a minimal theme for a cleaner look
labs(title = "Crude Oil Prices Over Time",
x = "Date",
y = "Value (USD)")
# Convert ggplot object to plotly for interactivity
ggplotly(p_crude_oil)
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
# Load the Crude Oil Price dataset
crude_oil_prices <- read.csv("MER_T09_01_CRUDE_OIL_PRICE.csv")
# Convert YYYYMM to Date format
crude_oil_prices <- crude_oil_prices[substr(crude_oil_prices$YYYYMM, 5, 6) <= 12, ]
# After filtering, attempt to convert 'YYYYMM' to Date format again
crude_oil_prices$Date <- as.Date(paste0(substr(crude_oil_prices$YYYYMM, 1, 4),
substr(crude_oil_prices$YYYYMM, 5, 6),
"01"), format="%Y%m%d")
head(crude_oil_prices$Date)
sum(is.na(crude_oil_prices$Value))
# Plotting with ggplot2
p_crude_oil <- ggplot(crude_oil_prices, aes(x = Date, y = Value)) +
geom_line() + # Add a line geometry
theme_minimal() + # Optional: Use a minimal theme for a cleaner look
labs(title = "Crude Oil Prices Over Time",
x = "Date",
y = "Value (USD)")
# Convert ggplot object to plotly for interactivity
p_crude_oil
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
library(ggplot2)
library(readr)
library(tidyverse)
library(lubridate)
library(forecast)
library(tseries)
library(plotly)
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
# Load the Crude Oil Price dataset
crude_oil_prices <- read.csv("MER_T09_01_CRUDE_OIL_PRICE.csv")
# Convert YYYYMM to Date format
crude_oil_prices <- crude_oil_prices[substr(crude_oil_prices$YYYYMM, 5, 6) <= 12, ]
# After filtering, attempt to convert 'YYYYMM' to Date format again
crude_oil_prices$Date <- as.Date(paste0(substr(crude_oil_prices$YYYYMM, 1, 4),
substr(crude_oil_prices$YYYYMM, 5, 6),
"01"), format="%Y%m%d")
head(crude_oil_prices$Date)
sum(is.na(crude_oil_prices$Value))
# Plotting with ggplot2
p_crude_oil <- ggplot(crude_oil_prices, aes(x = Date, y = Value)) +
geom_line() + # Add a line geometry
theme_minimal() + # Optional: Use a minimal theme for a cleaner look
labs(title = "Crude Oil Prices Over Time",
x = "Date",
y = "Value (USD)")
# Convert ggplot object to plotly for interactivity
p_crude_oil
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
# Load the Crude Oil Price dataset
crude_oil_prices <- read.csv("MER_T09_01_CRUDE_OIL_PRICE.csv")
# Convert YYYYMM to Date format
crude_oil_prices <- crude_oil_prices[substr(crude_oil_prices$YYYYMM, 5, 6) <= 12, ]
# After filtering, attempt to convert 'YYYYMM' to Date format again
crude_oil_prices$Date <- as.Date(paste0(substr(crude_oil_prices$YYYYMM, 1, 4),
substr(crude_oil_prices$YYYYMM, 5, 6),
"01"), format="%Y%m%d")
head(crude_oil_prices$Date)
sum(is.na(crude_oil_prices$Value))
crude_oil_prices$Value[crude_oil_prices$Value == "Not Available"] <- NA
# Convert the 'Value' column to numeric, since it might be a character because of the "Not Available" strings
crude_oil_prices$Value <- as.numeric(crude_oil_prices$Value)
# Check for NA values again
sum(is.na(crude_oil_prices$Value))
# Now, handle NA values according to your chosen strategy
# Option 1: Remove rows with NA values
crude_oil_prices <- na.omit(crude_oil_prices)
# Plotting with ggplot2
p_crude_oil <- ggplot(crude_oil_prices, aes(x = Date, y = Value)) +
geom_line() + # Add a line geometry
theme_minimal() + # Optional: Use a minimal theme for a cleaner look
labs(title = "Crude Oil Prices Over Time",
x = "Date",
y = "Value (USD)")
# Convert ggplot object to plotly for interactivity
p_crude_oil
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
library(ggplot2)
library(readr)
library(tidyverse)
library(lubridate)
library(forecast)
library(tseries)
library(plotly)
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
# Load the Crude Oil Price dataset
crude_oil_prices <- read.csv("MER_T09_01_CRUDE_OIL_PRICE.csv")
# Convert YYYYMM to Date format
crude_oil_prices <- crude_oil_prices[substr(crude_oil_prices$YYYYMM, 5, 6) <= 12, ]
# After filtering, attempt to convert 'YYYYMM' to Date format again
crude_oil_prices$Date <- as.Date(paste0(substr(crude_oil_prices$YYYYMM, 1, 4),
substr(crude_oil_prices$YYYYMM, 5, 6),
"01"), format="%Y%m%d")
head(crude_oil_prices$Date)
sum(is.na(crude_oil_prices$Value))
crude_oil_prices$Value[crude_oil_prices$Value == "Not Available"] <- NA
# Convert the 'Value' column to numeric, since it might be a character because of the "Not Available" strings
crude_oil_prices$Value <- as.numeric(crude_oil_prices$Value)
# Check for NA values again
sum(is.na(crude_oil_prices$Value))
# Now, handle NA values according to your chosen strategy
# Option 1: Remove rows with NA values
crude_oil_prices <- na.omit(crude_oil_prices)
# Plotting with ggplot2
p_crude_oil <- ggplot(crude_oil_prices, aes(x = Date, y = Value)) +
geom_line() + # Add a line geometry
theme_minimal() + # Optional: Use a minimal theme for a cleaner look
labs(title = "Crude Oil Prices Over Time",
x = "Date",
y = "Value (USD)")
# Convert ggplot object to plotly for interactivity
p_crude_oil
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
# Load the Natural Gas Prices dataset
natural_gas_prices <- read.csv("/Users/madhvimalhotra/Downloads/Spring 2024/Energy Time Series Poject/energy-sector/MER_T09_10_NATURAL GAS PRICES.csv")
# Convert YYYYMM to Date format for the first three datasets
natural_gas_prices$Date <- as.Date(paste0(natural_gas_prices$YYYYMM, "01"), format="%Y%m%d")
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
# Load the Average Prices Electricity dataset
avg_prices_electricity <- read.csv("MER_T09_08_AVG_PRICES_ELECTRICITY.csv")
# Convert YYYYMM to Date format for the first three datasets
avg_prices_electricity$Date <- as.Date(paste0(avg_prices_electricity$YYYYMM, "01"), format="%Y%m%d")
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
# Load the GDP dataset
gdp_data <- read.csv("GDP.csv")
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
# Load the CPI dataset
cpi_data <- read.csv("CPIAUCSL.csv")
#| code-fold: true
#| code-summary: 'Average Nitrate Levels'
#| warning: false
#| output: true
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
#|
#| code-fold: true
#| code-summary: 'Average Nitrate Levels'
#| warning: false
# Time Series Plot
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
#|
#| code-fold: true
#| code-summary: 'Average Nitrate Levels'
#| warning: false
#| code-fold: true
#| code-summary: 'Average Nitrate Levels'
#| warning: false
#|
#| code-fold: true
#| code-summary: 'Average Nitrate Levels'
#| warning: false
#|
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: true
# Load the Crude Oil Price dataset
crude_oil_prices <- read.csv("MER_T09_01_CRUDE_OIL_PRICE.csv")
# Convert YYYYMM to Date format
crude_oil_prices <- crude_oil_prices[substr(crude_oil_prices$YYYYMM, 5, 6) <= 12, ]
# After filtering, attempt to convert 'YYYYMM' to Date format again
crude_oil_prices$Date <- as.Date(paste0(substr(crude_oil_prices$YYYYMM, 1, 4),
substr(crude_oil_prices$YYYYMM, 5, 6),
"01"), format="%Y%m%d")
head(crude_oil_prices$Date)
sum(is.na(crude_oil_prices$Value))
crude_oil_prices$Value[crude_oil_prices$Value == "Not Available"] <- NA
# Convert the 'Value' column to numeric, since it might be a character because of the "Not Available" strings
crude_oil_prices$Value <- as.numeric(crude_oil_prices$Value)
# Check for NA values again
sum(is.na(crude_oil_prices$Value))
# Now, handle NA values according to your chosen strategy
# Option 1: Remove rows with NA values
crude_oil_prices <- na.omit(crude_oil_prices)
# Plotting with ggplot2
p_crude_oil <- ggplot(crude_oil_prices, aes(x = Date, y = Value)) +
geom_line() + # Add a line geometry
theme_minimal() + # Optional: Use a minimal theme for a cleaner look
labs(title = "Crude Oil Prices Over Time",
x = "Date",
y = "Value (USD)")
# Convert ggplot object to plotly for interactivity
p_crude_oil
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
library(ggplot2)
library(readr)
library(tidyverse)
library(lubridate)
library(forecast)
library(tseries)
library(plotly)
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
# Load the Crude Oil Price dataset
crude_oil_prices <- read.csv("MER_T09_01_CRUDE_OIL_PRICE.csv")
# Convert YYYYMM to Date format
crude_oil_prices <- crude_oil_prices[substr(crude_oil_prices$YYYYMM, 5, 6) <= 12, ]
# After filtering, attempt to convert 'YYYYMM' to Date format again
crude_oil_prices$Date <- as.Date(paste0(substr(crude_oil_prices$YYYYMM, 1, 4),
substr(crude_oil_prices$YYYYMM, 5, 6),
"01"), format="%Y%m%d")
head(crude_oil_prices$Date)
sum(is.na(crude_oil_prices$Value))
crude_oil_prices$Value[crude_oil_prices$Value == "Not Available"] <- NA
# Convert the 'Value' column to numeric, since it might be a character because of the "Not Available" strings
crude_oil_prices$Value <- as.numeric(crude_oil_prices$Value)
# Check for NA values again
sum(is.na(crude_oil_prices$Value))
# Now, handle NA values according to your chosen strategy
# Option 1: Remove rows with NA values
crude_oil_prices <- na.omit(crude_oil_prices)
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: true
# Plotting with ggplot2
p_crude_oil <- ggplot(crude_oil_prices, aes(x = Date, y = Value)) +
geom_line() + # Add a line geometry
theme_minimal() + # Optional: Use a minimal theme for a cleaner look
labs(title = "Crude Oil Prices Over Time",
x = "Date",
y = "Value (USD)")
# Convert ggplot object to plotly for interactivity
p_crude_oil
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
# Load the Natural Gas Prices dataset
natural_gas_prices <- read.csv("/Users/madhvimalhotra/Downloads/Spring 2024/Energy Time Series Poject/energy-sector/MER_T09_10_NATURAL GAS PRICES.csv")
# Convert YYYYMM to Date format for the first three datasets
natural_gas_prices$Date <- as.Date(paste0(natural_gas_prices$YYYYMM, "01"), format="%Y%m%d")
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
# Load the Average Prices Electricity dataset
avg_prices_electricity <- read.csv("MER_T09_08_AVG_PRICES_ELECTRICITY.csv")
# Convert YYYYMM to Date format for the first three datasets
avg_prices_electricity$Date <- as.Date(paste0(avg_prices_electricity$YYYYMM, "01"), format="%Y%m%d")
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
# Load the GDP dataset
gdp_data <- read.csv("GDP.csv")
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
# Load the CPI dataset
cpi_data <- read.csv("CPIAUCSL.csv")
#| code-fold: true
#| code-summary: 'Average Nitrate Levels'
#| warning: false
#| output: true
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
#|
#| code-fold: true
#| code-summary: 'Average Nitrate Levels'
#| warning: false
# Time Series Plot
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
#|
#| code-fold: true
#| code-summary: 'Average Nitrate Levels'
#| warning: false
#| code-fold: true
#| code-summary: 'Average Nitrate Levels'
#| warning: false
#|
#| code-fold: true
#| code-summary: 'Average Nitrate Levels'
#| warning: false
#|
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: true
# Plotting with ggplot2
p_crude_oil <- ggplot(crude_oil_prices, aes(x = Date, y = Value)) +
geom_line() + # Add a line geometry
theme_minimal() + # Optional: Use a minimal theme for a cleaner look
labs(title = "Crude Oil Prices Over Time",
x = "Date",
y = "Value (USD)")
# Convert ggplot object to plotly for interactivity
ggplotly(p_crude_oil)
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
# Load the Natural Gas Prices dataset
natural_gas_prices <- read.csv("MER_T09_10_NATURAL_GAS_PRICES.csv")
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
library(ggplot2)
library(readr)
library(tidyverse)
library(lubridate)
library(forecast)
library(tseries)
library(plotly)
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
# Load the Crude Oil Price dataset
crude_oil_prices <- read.csv("MER_T09_01_CRUDE_OIL_PRICE.csv")
# Convert YYYYMM to Date format
crude_oil_prices <- crude_oil_prices[substr(crude_oil_prices$YYYYMM, 5, 6) <= 12, ]
# After filtering, attempt to convert 'YYYYMM' to Date format again
crude_oil_prices$Date <- as.Date(paste0(substr(crude_oil_prices$YYYYMM, 1, 4),
substr(crude_oil_prices$YYYYMM, 5, 6),
"01"), format="%Y%m%d")
head(crude_oil_prices$Date)
sum(is.na(crude_oil_prices$Value))
crude_oil_prices$Value[crude_oil_prices$Value == "Not Available"] <- NA
# Convert the 'Value' column to numeric, since it might be a character because of the "Not Available" strings
crude_oil_prices$Value <- as.numeric(crude_oil_prices$Value)
# Check for NA values again
sum(is.na(crude_oil_prices$Value))
# Now, handle NA values according to your chosen strategy
# Option 1: Remove rows with NA values
crude_oil_prices <- na.omit(crude_oil_prices)
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: true
# Plotting with ggplot2
p_crude_oil <- ggplot(crude_oil_prices, aes(x = Date, y = Value)) +
geom_line() + # Add a line geometry
theme_minimal() + # Optional: Use a minimal theme for a cleaner look
labs(title = "Crude Oil Prices Over Time",
x = "Date",
y = "Value (USD)")
# Convert ggplot object to plotly for interactivity
ggplotly(p_crude_oil)exploratory-data-analysis.html
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
library(ggplot2)
library(readr)
library(tidyverse)
library(lubridate)
library(forecast)
library(tseries)
library(plotly)
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
# Load the Crude Oil Price dataset
crude_oil_prices <- read.csv("MER_T09_01_CRUDE_OIL_PRICE.csv")
# Convert YYYYMM to Date format
crude_oil_prices <- crude_oil_prices[substr(crude_oil_prices$YYYYMM, 5, 6) <= 12, ]
# After filtering, attempt to convert 'YYYYMM' to Date format again
crude_oil_prices$Date <- as.Date(paste0(substr(crude_oil_prices$YYYYMM, 1, 4),
substr(crude_oil_prices$YYYYMM, 5, 6),
"01"), format="%Y%m%d")
head(crude_oil_prices$Date)
sum(is.na(crude_oil_prices$Value))
crude_oil_prices$Value[crude_oil_prices$Value == "Not Available"] <- NA
# Convert the 'Value' column to numeric, since it might be a character because of the "Not Available" strings
crude_oil_prices$Value <- as.numeric(crude_oil_prices$Value)
# Check for NA values again
sum(is.na(crude_oil_prices$Value))
# Now, handle NA values according to your chosen strategy
# Option 1: Remove rows with NA values
crude_oil_prices <- na.omit(crude_oil_prices)
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: true
# Plotting with ggplot2
p_crude_oil <- ggplot(crude_oil_prices, aes(x = Date, y = Value)) +
geom_line() + # Add a line geometry
theme_minimal() + # Optional: Use a minimal theme for a cleaner look
labs(title = "Crude Oil Prices Over Time",
x = "Date",
y = "Value (USD)")
# Convert ggplot object to plotly for interactivity
ggplotly(p_crude_oil)
#| code-fold: true
#| code-summary: 'Importing Libraries'
#| warning: false
#| output: false
# Load the Natural Gas Prices dataset
natural_gas_prices <- read.csv("MER_T09_10_NATURAL_GAS_PRICES.csv")
